version: "3.9"
services:
  go-backend:
    build:
      context: ./api-backend
      dockerfile: Dockerfile
    container_name: go-backend
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - GO_API_SERVICE_ENV=DEVELOPMENT
      - HTTP_PORT=8082
      - DB_HOST=postgres
      - DB_NAME=personal
      - DB_USER=postgres
      - DB_PORT=5432
      - DB_PASSWORD=postgres
      - SSL_MODE=disable
    ports:
      - "8082:8082"
    networks:
      - api-network

  postgres:
    image: "pgvector/pgvector:pg16"
    container_name: postgres-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=personal
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - api-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    # Uncomment this for verbose logging 
    # command: ["postgres", "-c", "log_statement=all", "-c", "log_min_messages=debug1"]

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
      PGADMIN_CONFIG_SERVER_MODE: "False"
    networks:
      - api-network
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./servers.json:/pgadmin4/servers.json
    entrypoint: >
      /bin/sh -c "echo 'postgres:5432:*:postgres:postgres' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"

networks:
  api-network:

volumes:
  postgres-data:
  pgadmin-data:
